<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Minecraft</name>
    </assembly>
    <members>
        <member name="T:Minecraft.Key">
            <summary>
            All keys
            </summary>
        </member>
        <member name="T:Minecraft.KeyExtensions">
            <summary>
            All methods involving <see cref="T:Minecraft.Key"/> and <see cref="T:OpenTK.Input.Key"/> enums
            </summary>
        </member>
        <member name="M:Minecraft.KeyExtensions.ToOpenTKKey(Minecraft.Key)">
            <summary>
            Converts <see cref="T:Minecraft.Key"/> to <see cref="T:OpenTK.Input.Key"/>
            </summary>
            <param name="key">The key to be converted</param>
            <returns>The equivalent <see cref="T:OpenTK.Input.Key"/> key</returns>
        </member>
        <member name="M:Minecraft.KeyExtensions.ToKey(OpenTK.Input.Key)">
            <summary>
            Converts <see cref="T:OpenTK.Input.Key"/> to <see cref="T:Minecraft.Key"/>
            </summary>
            <param name="key">The key to be converted</param>
            <returns>The equivalent <see cref="T:Minecraft.Key"/> key</returns>
        </member>
        <member name="M:Minecraft.MainWindow.WindowsAPI.GetForegroundWindow">
            <summary>
            The GetForegroundWindow function returns a handle to the foreground window.
            </summary>
        </member>
        <member name="M:Minecraft.MainWindow.WindowsAPI.FindWindowEx(System.IntPtr,System.IntPtr,System.String,System.String)">
            <param name="hwndParent"></param>
            <param name="hwndChildAfter"></param>
            <param name="lpszClass"></param>
            <param name="lpszWindow"></param>
            <returns></returns>
        </member>
        <member name="M:Minecraft.MainWindow.WindowsAPI.PostMessage(System.IntPtr,System.UInt32,System.Int32,System.Int32)">
            <param name="hWnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:Minecraft.MainWindow.WindowsAPI.VkKeyScan(System.Char)">
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Minecraft.MainWindow.WindowsAPI.FindWindow(System.String)">
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Minecraft.MainWindow.WindowsAPI.MakeLong(System.Int32,System.Int32)">
            <param name="low"></param>
            <param name="high"></param>
            <returns></returns>
        </member>
        <member name="T:Minecraft.MainWindow.Keyboard">
            <summary>
            A API for the keyboard
            </summary>
        </member>
        <member name="E:Minecraft.MainWindow.Keyboard.KeyPressed">
            <summary>
            Fires when a key went down
            </summary>
        </member>
        <member name="E:Minecraft.MainWindow.Keyboard.KeyReleased">
            <summary>
            Fires when a key went up
            </summary>
        </member>
        <member name="M:Minecraft.MainWindow.Keyboard.RegisterPressKey(Minecraft.Key)">
            <summary>
            Registers a key press. NOTE: This will have no actual key press. To simulate one, use <see cref="!:SimulateKeyPress(IntPtr, Key)"/>
            </summary>
            <param name="key">The key that went down</param>
        </member>
        <member name="M:Minecraft.MainWindow.Keyboard.RegisterReleaseKey(Minecraft.Key)">
            <summary>
            Registers a key release. NOTE: This will have no actual key release. To simulate one, use <see cref="!:SimulateKeyRelease(IntPtr, Key)"/>
            </summary>
            <param name="key">The key that went up</param>
        </member>
        <member name="M:Minecraft.MainWindow.Keyboard.IsKeyPressed(Minecraft.Key)">
            <summary>
            Checks if a key is being pressed
            </summary>
            <param name="key">The key that needs to be checked</param>
            <returns>The state of the key</returns>
        </member>
        <member name="T:Minecraft.MainWindow.KeyboardEventArgs">
            <summary>
            Arguments for keyboard event
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.KeyboardEventArgs.Key">
            <summary>
            The key causing the event
            </summary>
        </member>
        <member name="M:Minecraft.MainWindow.KeyboardEventArgs.#ctor(Minecraft.Key)">
            <summary>
            Creates new arguments for keyboard event
            </summary>
            <param name="key">The key causing this event</param>
        </member>
        <member name="T:Minecraft.MainWindow.MainWindow">
            <summary>
            A OpenGL window to show
            </summary>
            <inheritdoc/>
        </member>
        <member name="P:Minecraft.MainWindow.MainWindow.Logger">
            <summary>
            The default logger
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.MainWindow.Keyboard">
            <summary>
            The API to the physical keyboard
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.MainWindow.Mouse">
            <summary>
            The API to the physical mouse
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.MainWindow.InnerBounds">
            <summary>
            Gets the inner bounds of the window (excluding title bar and borders)
            </summary>
        </member>
        <member name="M:Minecraft.MainWindow.MainWindow.Run">
            <summary>
            Starts the appliucation
            </summary>
        </member>
        <member name="M:Minecraft.MainWindow.MainWindow.OnLoad(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Minecraft.MainWindow.MainWindow.OnUnload(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Minecraft.MainWindow.MainWindow.OnResize(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Minecraft.MainWindow.MainWindow.OnKeyDown(OpenTK.Input.KeyboardKeyEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Minecraft.MainWindow.MainWindow.OnKeyUp(OpenTK.Input.KeyboardKeyEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Minecraft.MainWindow.MainWindow.OnUpdateFrame(OpenTK.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Minecraft.MainWindow.MainWindow.OnRenderFrame(OpenTK.FrameEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Minecraft.MainWindow.MainWindow.OnMouseMove(OpenTK.Input.MouseMoveEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Minecraft.MainWindow.MainWindow.OnMouseDown(OpenTK.Input.MouseButtonEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Minecraft.MainWindow.MainWindow.OnMouseUp(OpenTK.Input.MouseButtonEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:Minecraft.MainWindow.Mouse">
            <summary>
            A API for the mouse
            </summary>
        </member>
        <member name="M:Minecraft.MainWindow.Mouse.SimulateMove(Minecraft.MainWindow.Position)">
            <summary>
            Move
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:Minecraft.MainWindow.Mouse.SimulateMouseDown(Minecraft.MainWindow.Position,OpenTK.Input.MouseButton)">
            <summary>
            Simulates a fake mouse click. NOTE: This is going to actually click the selected mouse button
            </summary>
            <param name="position">The position at which the mouse click occured</param>
            <param name="button">The button that went down</param>
        </member>
        <member name="M:Minecraft.MainWindow.Mouse.SimulateMouseUp(Minecraft.MainWindow.Position,OpenTK.Input.MouseButton)">
            <summary>
            Simulates a fake mouse release. NOTE: This is going to actually release the selected mouse button
            </summary>
            <param name="position">The position at which the mouse release occured</param>
            <param name="button">The button that went up</param>
        </member>
        <member name="P:Minecraft.MainWindow.Mouse.Position">
            <summary>
            The last registered mouse position
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.Mouse.Left">
            <summary>
            The state of the left button (true for pressed)
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.Mouse.Right">
            <summary>
            The state of the right button (true for pressed)
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.Mouse.Middle">
            <summary>
            The state of the middle button (true for pressed)
            </summary>
        </member>
        <member name="M:Minecraft.MainWindow.Mouse.RegisterMove(Minecraft.MainWindow.Position)">
            <summary>
            Registers new position. NOTE: This will not actually effect 
            the real mouse position. To simulate a mouse move, use <see cref="M:Minecraft.MainWindow.Mouse.SimulateMove(Minecraft.MainWindow.Position)"/>
            </summary>
            <param name="position">The new position of the mouse</param>
        </member>
        <member name="M:Minecraft.MainWindow.Mouse.RegisterPress(OpenTK.Input.MouseButton)">
            <summary>
            Registers a mouse click. NOTE: This will not actually simulate a mouse click.
            To simulate a click, use <see cref="M:Minecraft.MainWindow.Mouse.SimulateMouseDown(Minecraft.MainWindow.Position,OpenTK.Input.MouseButton)"/>
            </summary>
            <param name="button">The button that went down</param>
        </member>
        <member name="M:Minecraft.MainWindow.Mouse.RegisterRelease(OpenTK.Input.MouseButton)">
            <summary>
            Registers a mouse release. NOTE: This will not actually simulate a mouse release.
            To simulate a release, use <see cref="M:Minecraft.MainWindow.Mouse.SimulateMouseUp(Minecraft.MainWindow.Position,OpenTK.Input.MouseButton)"/>
            </summary>
            <param name="button">The button that went up</param>
        </member>
        <member name="E:Minecraft.MainWindow.Mouse.MouseMoved">
            <summary>
            Fires when a mouse move occurs
            </summary>
        </member>
        <member name="E:Minecraft.MainWindow.Mouse.MousePressed">
            <summary>
            Occurs when any mouse click occured
            </summary>
        </member>
        <member name="E:Minecraft.MainWindow.Mouse.MouseReleased">
            <summary>
            Occurs when any mouse release occurs
            </summary>
        </member>
        <member name="T:Minecraft.MainWindow.MouseEventArgs">
            <summary>
            Arguments for mouse event
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.MouseEventArgs.LeftPressed">
            <summary>
            The new mouse position
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.MouseEventArgs.Position">
            <summary>
            The state of left mouse button
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.MouseEventArgs.RightPressed">
            <summary>
            The new state of right mouse button
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.MouseEventArgs.MiddlePressed">
            <summary>
            The state of middle mouse button
            </summary>
        </member>
        <member name="M:Minecraft.MainWindow.MouseEventArgs.#ctor(Minecraft.MainWindow.Position,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates arguments for mouse events
            </summary>
            <param name="position">The new mouse position</param>
            <param name="left">The new state of left mouse button</param>
            <param name="right">The state of right mouse button</param>
            <param name="middle">The state of middle mouse button</param>
        </member>
        <member name="T:Minecraft.MainWindow.ScrollEventArgs">
            <summary>
            Argumants for scroll event
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.ScrollEventArgs.ScrollDelta">
            <summary>
            The velocity of the scroll
            </summary>
        </member>
        <member name="M:Minecraft.MainWindow.ScrollEventArgs.#ctor(System.Int32)">
            <summary>
            Creates new arguments for scroll event
            </summary>
            <param name="delta">The velocity of the scroll</param>
        </member>
        <member name="T:Minecraft.MainWindow.Position">
            <summary>
            A two-dimentional point in the space
            </summary>
        </member>
        <member name="F:Minecraft.MainWindow.Position.Zero">
            <summary>
            Position, located at(0, 0)
            </summary>
        </member>
        <member name="E:Minecraft.MainWindow.Position.XChanged">
            <summary>
            Fires when X coordinate has changed
            </summary>
        </member>
        <member name="E:Minecraft.MainWindow.Position.YChanged">
            <summary>
            Fires when Y coordinate has changed
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.Position.X">
            <summary>
            The X coordinate
            </summary>
        </member>
        <member name="P:Minecraft.MainWindow.Position.Y">
            <summary>
            The Y coordinate
            </summary>
        </member>
        <member name="M:Minecraft.MainWindow.Position.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates new two-dimentional point
            </summary>
            <param name="x">The X coordinate</param>
            <param name="y">The Y coordinate</param>
        </member>
        <member name="M:Minecraft.MainWindow.Position.#ctor(System.Drawing.Point)">
            <summary>
            Converts a <see cref="T:System.Drawing.Point"/> to <see cref="T:Minecraft.MainWindow.Position"/>
            </summary>
            <param name="point">The point to be converted</param>
        </member>
        <member name="T:Minecraft.GUI.Logger">
            <summary>
            Writes to console formatted message and dumps tme message into a file
            </summary>
        </member>
        <member name="P:Minecraft.GUI.Logger.DateFormat">
            <summary>
            The date format the logger is going to use
            </summary>
        </member>
        <member name="P:Minecraft.GUI.Logger.Name">
            <summary>
            The name of the logger
            </summary>
        </member>
        <member name="P:Minecraft.GUI.Logger.DumpLocation">
            <summary>
            The dump location of the logger
            </summary>
        </member>
        <member name="M:Minecraft.GUI.Logger.Info(System.String)">
            <summary>
            Inform the user
            </summary>
            <param name="message">The message that the user will see</param>
        </member>
        <member name="M:Minecraft.GUI.Logger.Warn(System.String)">
            <summary>
            Warn the user
            </summary>
            <param name="message">The message that the user will see</param>
        </member>
        <member name="M:Minecraft.GUI.Logger.Error(System.String)">
            <summary>
            Inform the user about an error
            </summary>
            <param name="message">The message that the user will see</param>
        </member>
        <member name="M:Minecraft.GUI.Logger.DisplayException(System.Exception)">
            <summary>
            Displays an exception in a nice way
            </summary>
            <param name="exception">The exception you want to display</param>
        </member>
        <member name="M:Minecraft.GUI.Logger.#ctor(System.String)">
            <summary>
            Creates new logger
            </summary>
            <param name="name">The name of the logger</param>
        </member>
    </members>
</doc>
